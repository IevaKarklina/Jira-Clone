{
	"info": {
		"_postman_id": "e6b354f2-525b-4341-ac29-38d872d1db0a",
		"name": "IevaKarklina_jira_clone_comments",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Get authentication token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"token\", jsonData.authToken);\r",
									"\r",
									"pm.test(\"Retrieving project information was successful\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "8923d4f7-a5fc-425c-9430-ac2e8e4b9e32"
							}
						}
					],
					"id": "6c9f0cf3-18c8-4f38-bdc7-601758bb47ef",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": "{{base_url}}/authentication/guest"
					},
					"response": []
				},
				{
					"name": "Get project id into variable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"project_id\", jsonData.project.id);\r",
									"pm.globals.set(\"user_id1\", jsonData.project.users[0].id);\r",
									"pm.globals.set(\"user_id2\", jsonData.project.users[1].id);\r",
									"pm.globals.set(\"user_id3\", jsonData.project.users[2].id);\r",
									"\r",
									"pm.test(\"Retrieving project information was successful\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "2268f8d7-f028-4865-aeff-4936769446e8"
							}
						}
					],
					"id": "01b38e35-577a-42a2-9103-93265a42cf7d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/project"
					},
					"response": []
				},
				{
					"name": "Get current user id into variable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"pm.globals.set(\"current_user_id\", jsonData.currentUser.id);\r",
									"\r",
									"pm.test(\"Retrieving user information was successful\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "77f6ea14-949c-4b72-a120-b5da26995850"
							}
						}
					],
					"id": "aa2d145b-ef79-4efc-9615-614ca218fb67",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/currentUser"
					},
					"response": []
				}
			],
			"id": "704fbfb6-47db-4d6e-ba3e-13bc7db040c8",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "a2317859-fd7d-427c-b640-3c24f99d6984"
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						],
						"id": "5ad241b9-5759-4ff6-b664-49186c3f5921"
					}
				}
			]
		},
		{
			"name": "Create comments",
			"item": [
				{
					"name": "Create issue (prerequisite)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.globals.set(\"issue_id\", jsonData.issue.id);\r",
									"\r",
									"pm.test(\"Issue creation was successful\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check that information was saved correctly\", function () {\r",
									"    pm.expect(jsonData.issue.title).to.eql(\"Issue title, tests for adding, updating and deleting a comment\");\r",
									"    pm.expect(jsonData.issue.type).to.eql(\"task\");\r",
									"    pm.expect(jsonData.issue.description).to.eql(\"Issue description\");\r",
									"    pm.expect(jsonData.issue.status).to.eql(\"backlog\");\r",
									"    pm.expect(jsonData.issue.priority).to.eql(\"3\");\r",
									"    pm.expect(jsonData.issue.reporterId).to.eql(pm.globals.get('current_user_id'));\r",
									"    pm.expect(jsonData.issue.projectId).to.eql(pm.globals.get('project_id'));\r",
									"    pm.expect(jsonData.issue.users[0].id).to.eql(pm.globals.get('user_id1'));\r",
									"    pm.expect(jsonData.issue.users[0].id).to.be.oneOf([\r",
									"        pm.globals.get(\"user_id1\"),\r",
									"        pm.globals.get(\"user_id2\"),\r",
									"        pm.globals.get(\"user_id3\")\r",
									"    ]);\r",
									"    pm.expect(jsonData.issue.estimate).to.eql(null);\r",
									"    pm.expect(jsonData.issue.estimate).to.be.null;\r",
									"    pm.expect(jsonData.issue.timeSpent).to.be.null;\r",
									"    pm.expect(jsonData.issue.timeRemaining).to.eql(null);\r",
									"    pm.expect(jsonData.issue.createdAt).to.not.be.null;\r",
									"    pm.expect(jsonData.issue.updatedAt).to.not.be.null;\r",
									"    pm.expect(jsonData.issue.listPosition).to.not.be.null;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8dee7cb8-7fa9-429f-9be5-a898f203c9ed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"task\",\r\n    \"title\": \"Issue title, tests for adding, updating and deleting a comment\",\r\n    \"description\": \"Issue description\",\r\n    \"reporterId\": {{current_user_id}},\r\n    \"priority\": \"3\",\r\n    \"status\": \"backlog\",\r\n    \"projectId\": {{project_id}},\r\n    \"users\": [\r\n        {\r\n            \"id\": {{user_id1}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/issues"
					},
					"response": []
				},
				{
					"name": "Add comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.globals.set(\"comment_nr1_id\", jsonData.comment.id);\r",
									"\r",
									"pm.test(\"Comment was added successfully\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check comment body\", function () {\r",
									"    pm.expect(jsonData.comment.body).to.eql(\"Adding the first comment\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "83e795fa-8243-4728-bde9-34e346885c58",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"Adding the first comment\",\r\n    \"issueId\": {{issue_id}},\r\n    \"userId\": {{current_user_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/comments"
					},
					"response": []
				},
				{
					"name": "Add another comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.globals.set(\"comment_nr2_id\", jsonData.comment.id);\r",
									"\r",
									"pm.test(\"Second comment was added successfully\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check comment body\", function () {\r",
									"    pm.expect(jsonData.comment.body).to.eql(\"Adding the second comment\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4ce809cc-67e8-4e76-b104-baecdb380497",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"Adding the second comment\",\r\n    \"issueId\": {{issue_id}},\r\n    \"userId\": {{current_user_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/comments"
					},
					"response": []
				},
				{
					"name": "Get issue with both comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9c88dc7-23d0-4216-8472-aa19357c65f5",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test('Get request was successful', function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check that response includes both comments\", function () {    \r",
									"    pm.expect(jsonData.issue.comments[0].id).to.eql(pm.globals.get('comment_nr1_id'));\r",
									"    pm.expect(jsonData.issue.comments[1].id).to.eql(pm.globals.get('comment_nr2_id'));\r",
									"    pm.expect(jsonData.issue.comments[0].body).to.eql('Adding the first comment');\r",
									"    pm.expect(jsonData.issue.comments[1].body).to.eql('Adding the second comment');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f9a98235-1835-44cb-bdb6-0a95ccd5dbdb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/issues/{{issue_id}}"
					},
					"response": []
				},
				{
					"name": "Add comment (required field missing)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Comment was not added, correct error is returned\", function () {\r",
									"    pm.response.to.be.error;\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "aa360ae2-5163-41a9-8ccf-1ce76b4c5a0c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"issueId\": {{issue_id}},\r\n    \"userId\": {{current_user_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/comments"
					},
					"response": []
				},
				{
					"name": "Add comment (special symbols)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"//save received response to current test variable\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Comment was added\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check comment body\", function () {\r",
									"    pm.expect(jsonData.comment.body).to.eql(\"Comment with special symbols ¤%&/¤”, добрый день\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1a244057-4868-423b-b794-95efabbde533",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"Comment with special symbols ¤%&/¤”, добрый день\",\r\n    \"issueId\": {{issue_id}},\r\n    \"userId\": {{current_user_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/comments"
					},
					"response": []
				}
			],
			"id": "c3fad3ff-0d8c-4ae6-bc9d-a54fb98c1ee5"
		},
		{
			"name": "Update comments",
			"item": [
				{
					"name": "Add comment (prerequisite)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.globals.set(\"comment_id_for_update\", jsonData.comment.id);\r",
									"\r",
									"pm.test(\"Comment was added successfully\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check comment body\", function () {\r",
									"    pm.expect(jsonData.comment.body).to.eql(\"New comment for 'Update comments' folder\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d772cc4f-19e7-48c8-9de6-aea121ed7737",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"New comment for 'Update comments' folder\",\r\n    \"issueId\": {{issue_id}},\r\n    \"userId\": {{current_user_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/comments"
					},
					"response": []
				},
				{
					"name": "Update comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Comment was updated successfully\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check updated comment body\", function () {\r",
									"    pm.expect(jsonData.comment.body).to.eql(\"New comment for 'Update comments' folder, updated comment\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "75238c09-eb76-4ae9-a178-d759d86c19f5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"New comment for 'Update comments' folder, updated comment\",\r\n    \"userId\": {{current_user_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/comments/{{comment_id_for_update}}"
					},
					"response": []
				},
				{
					"name": "Update comment (non-existing comment id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Comment was not updated successfully\", function () {\r",
									"    pm.response.to.be.error;\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f2ca0a2a-ee92-4b07-8202-2b05c3cca379",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"New comment for 'Update comments' folder, updated comment\",\r\n    \"userId\": {{current_user_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/comments/999999999"
					},
					"response": []
				},
				{
					"name": "Delete comment (prerequisitite for next request)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Comment was deleted successfully\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "df77b890-a140-49d2-a63c-07c010f05f2d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/comments/{{comment_id_for_update}}"
					},
					"response": []
				},
				{
					"name": "Update comment (deleted comment id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Comment was not updated successfully\", function () {\r",
									"    pm.response.to.be.error;\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "db7a98d8-8f64-4895-88b1-be2e457ef341",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"Does this comment exists?\",\r\n    \"userId\": {{current_user_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/comments/{{comment_id_for_update}}"
					},
					"response": []
				}
			],
			"id": "e9c81075-96bf-4a5c-adfa-015ea5520bd7"
		},
		{
			"name": "Delete comments",
			"item": [
				{
					"name": "Add comment (prerequisite)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"//save certain value from JSON to globals  variable\r",
									"pm.globals.set(\"comment_id_for_delete\", jsonData.comment.id);\r",
									"\r",
									"pm.test(\"Comment was added successfully\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d935ea78-ce46-43f0-8b10-e211177863f8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"New comment for 'Delete comments' folder\",\r\n    \"issueId\": {{issue_id}},\r\n    \"userId\": {{current_user_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/comments"
					},
					"response": []
				},
				{
					"name": "Delete comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Comment was deleted successfully\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "beb5362f-0267-4fe7-81bb-16eb930d834a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/comments/{{comment_id_for_delete}}"
					},
					"response": []
				},
				{
					"name": "Delete comment (non-existing comment id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Comment was deleted successfully\", function () {\r",
									"    pm.response.to.be.error;\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4c4f86ae-f772-491c-8f74-d065399b5502",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/comments/9999999"
					},
					"response": []
				},
				{
					"name": "Delete comment (already deleted comment id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d77e98f-4e8e-4f35-a3b8-54256ff05e3b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Comment was not found\", function () {\r",
									"    pm.response.to.be.error;\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ac3e756e-c6e0-41a5-a468-2435daf75ee7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImlhdCI6MTY2MTg4ODg2NSwiZXhwIjoxNjc3NDQwODY1fQ.xBCXkyIvbEe6yW1l079gPqZjt0indGDLBvyUG9n_0es"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/comments/{{comment_id_for_delete}}"
					},
					"response": []
				}
			],
			"id": "618fa184-e0ad-4a18-a869-1af95c6fbd4f"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{token}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "67b8efb5-ef07-483b-9aa3-bbdbd1a896c6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7b5708a5-c5d9-4d03-a98b-f76a0415fd3b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://jira-api.ivorreic.com",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string",
			"disabled": true
		}
	]
}